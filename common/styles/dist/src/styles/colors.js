"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.themes = exports.themedColorVariables = void 0;
const polished_1 = require("polished");
const core_1 = require("@gowiki/core");
const theme_1 = require("./theme");
const black = '#151C48';
const bodyBlack = '#282D36';
const white = 'white';
const baseColors = {
    rootBackground: black,
    beige: '#F3F0EC',
    pureBlack: '#000000',
    superBlack: '#0A0B0D',
    foreground: '#EEEEEE',
    largeCallBoxBackground: '#0A0A0B',
    callBoxBackground: '#101012',
    cornerCallBoxBackground: '#171719',
    callBoxPopoverBackground: '#27272A',
    darkGrey: '#212121',
    speakingColor: '#43b581',
    brand: '#4341DC',
    brand2: '#00B6B6',
    brandWordMark: '#364372',
    green: '#67C202',
    darkGreen: '#38ad00',
    darkPurple: '#431c53',
    greenOnBlack: '#35BA67',
    greenOnGreen: '#58ff97',
    red: '#FF4C3B',
    redBadgeOnWhite: '#e23939',
    blue: '#307BFF',
    yellow: '#FFB930',
    orange: '#F29D1D',
    mustard: '#FFA722',
    transparent: polished_1.rgba(black, 0.001),
    black: black,
    black95: polished_1.rgba(black, 0.95),
    black90: polished_1.rgba(black, 0.9),
    black85: polished_1.rgba(black, 0.85),
    black80: polished_1.rgba(black, 0.8),
    black70: polished_1.rgba(black, 0.7),
    black65: polished_1.rgba(black, 0.65),
    black60: polished_1.rgba(black, 0.6),
    black50: polished_1.rgba(black, 0.5),
    black40: polished_1.rgba(black, 0.4),
    black35: polished_1.rgba(black, 0.35),
    black30: polished_1.rgba(black, 0.3),
    black20: polished_1.rgba(black, 0.2),
    black15: polished_1.rgba(black, 0.15),
    black10: polished_1.rgba(black, 0.1),
    black05: polished_1.rgba(black, 0.05),
    white0: polished_1.rgba(white, 0),
    white05: polished_1.rgba(white, 0.05),
    white10: polished_1.rgba(white, 0.1),
    white15: polished_1.rgba(white, 0.15),
    white20: polished_1.rgba(white, 0.2),
    white25: polished_1.rgba(white, 0.25),
    white30: polished_1.rgba(white, 0.3),
    white40: polished_1.rgba(white, 0.4),
    white50: polished_1.rgba(white, 0.5),
    white60: polished_1.rgba(white, 0.6),
    white70: polished_1.rgba(white, 0.7),
    white80: polished_1.rgba(white, 0.8),
    white90: polished_1.rgba(white, 0.9),
    white: white,
    facebook: '#1877F2',
    twitter: '#1DA1F2',
    linkedin: '#0077B5',
    reddit: '#FF4500'
};
const c = {
    ...baseColors,
    speakingIndicator: '#FBFF4B',
    inCallChatBackground: baseColors.callBoxBackground,
    tooltipBackground: '#383847',
    status: {
        available: baseColors.green,
        inConversation: baseColors.blue,
        recording: baseColors.red,
        unavailable: {
            onBlack: baseColors.white30,
            onWhite: baseColors.black30
        }
    },
    matteBlack: amount => polished_1.lighten(1 - amount, '#000'),
    body: {
        black: bodyBlack,
        black90: polished_1.rgba(bodyBlack, 0.9),
        black80: polished_1.rgba(bodyBlack, 0.8),
        black70: polished_1.rgba(bodyBlack, 0.7),
        black60: polished_1.rgba(bodyBlack, 0.6),
        black50: polished_1.rgba(bodyBlack, 0.5),
        black40: polished_1.rgba(bodyBlack, 0.4),
        black30: polished_1.rgba(bodyBlack, 0.3),
        black20: polished_1.rgba(bodyBlack, 0.2),
        black10: polished_1.rgba(bodyBlack, 0.1)
    },
    sidebarBlack: baseColors.black60,
    purple: baseColors.brand,
    blue10: polished_1.transparentize(0.9, baseColors.blue),
    blue15: polished_1.transparentize(0.85, baseColors.blue),
    blue20: polished_1.transparentize(0.8, baseColors.blue),
    blue30: polished_1.transparentize(0.7, baseColors.blue),
    lightBlue: polished_1.transparentize(0.88, baseColors.blue),
    lightPurple: polished_1.transparentize(0.88, baseColors.brand),
    lightPurpleOpaque: '#E8E8FB',
    lightGreen: polished_1.transparentize(0.8, baseColors.green),
    lightTeal: polished_1.transparentize(0.9, baseColors.brand2),
    lightYellow: polished_1.transparentize(0.4, '#FFEB82'),
    darkYellow: '#7C4B00',
    getBlack: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.black),
    getBlue: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.blue),
    getRed: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.red),
    getGreen: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.green),
    getBrand: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.brand),
    getPurple: (amount) => polished_1.transparentize(1 - amount / 100, baseColors.brand),
    getColor: (color, amount) => polished_1.transparentize(1 - amount / 100, color),
    get: (color, amount) => polished_1.transparentize(1 - amount / 100, color),
    getOpaqueOnWhite: (color, amount) => polished_1.mix(amount / 100, color, 'white'),
    getOpaqueOnBlack: (color, amount) => polished_1.mix(amount / 100, color, baseColors.largeCallBoxBackground),
    orange20: polished_1.transparentize(0.8, baseColors.orange),
    orange40: polished_1.transparentize(0.4, baseColors.orange),
    darkOrangeOnOrange20: '#D3770B',
    warning: baseColors.orange,
    error: baseColors.red,
    info: polished_1.transparentize(0.9, baseColors.brand2),
    inputFocus: polished_1.transparentize(0.8, baseColors.blue)
};
exports.themedColorVariables = {
    ink: 'ink',
    ink95: 'ink95',
    ink90: 'ink90',
    ink85: 'ink85',
    ink80: 'ink80',
    ink75: 'ink75',
    ink70: 'ink70',
    ink65: 'ink65',
    ink60: 'ink60',
    ink55: 'ink55',
    ink50: 'ink50',
    ink45: 'ink45',
    ink40: 'ink40',
    ink35: 'ink35',
    ink30: 'ink30',
    ink25: 'ink25',
    ink20: 'ink20',
    ink15: 'ink15',
    ink10: 'ink10',
    ink05: 'ink05',
    background: 'background',
    popoverBackground: 'popoverBackground',
    bgIdle: 'bgIdle',
    bgHover: 'bgHover',
    bgPressing: 'bgPressing',
    highlight: 'highlight',
    highlightText: 'highlightText',
    highlightHover: 'highlightHover',
    highlightPressing: 'highlightPressing',
};
const customThemes = {
    // Light Themes
    snow: ['#ffffff', '#F0F0F4', c.black, polished_1.setLightness(0.10, c.black), c.brand, '#ffffff'],
    ochin: ['#fff', '#323E4C', c.black, polished_1.setLightness(0.90, '#323E4C'), '#6698C8', '#ffffff'],
    // Dark Themes
    superBlack: ['black', 'black', polished_1.setLightness(0.90, 'black'), polished_1.setLightness(0.80, 'black'), 'white', '#000'],
    dark: ['#161618', '#0E0E11', polished_1.setLightness(0.90, '#161618'), polished_1.setLightness(0.80, '#161618'), c.brand, '#ffffff'],
    lushForest: ['#1F2929', '#161D1D', '#E2E9E9', '#C5D3D3', '#F9835A', '#4D2011'],
};
const defaultTheme = theme_1.makeTheme(core_1.Themes.LIGHT, {
    background: c.white,
    ink: c.black,
    detailsBackground: '#212125',
    detailsInk: c.white80,
    highlight: c.brand,
    highlightText: c.white,
    bgIdle: '#F3F3F7',
    bgHover: '#DFE1EC',
    bgPressing: '#C8CCDF',
});
const darkTheme = theme_1.makeTheme(core_1.Themes.DARK, theme_1.themeArrayToObject(customThemes.dark));
exports.themes = {
    whiteBackground: defaultTheme,
    darkBackground: darkTheme,
};
exports.default = {
    ...c,
    ...exports.themedColorVariables,
};
//# sourceMappingURL=colors.js.map